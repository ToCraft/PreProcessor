/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details on writing Custom Plugins, please refer to https://docs.gradle.org/8.8/userguide/custom_plugins.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id "java"
    id "java-gradle-plugin"
    id "maven-publish"
    id 'com.gradle.plugin-publish' version '1.2.1'
}

group = "dev.tocraft"
def pluginId = 'preprocessor'

version = "1.1"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:2.0.0")
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.2')
        }

        // Create a new test suite
        functionalTest(JvmTestSuite) {
            dependencies {
                // functionalTest test suite depends on the production code in tests
                implementation project()
            }

            targets {
                all {
                    // This test suite should run after the built-in test suite has run its tests
                    testTask.configure { shouldRunAfter(test) }
                }
            }
        }
    }
}

gradlePlugin {
    website = 'https://github.com/ToCraft/PreProcessor'
    vcsUrl = 'https://github.com/ToCraft/PreProcessor'

    // Define the plugin
    plugins {
        preprocessor {
            id = group + "." + pluginId
            implementationClass = 'dev.tocraft.gradle.preprocess.PreProcessorPlugin'
            displayName = 'PreProcessor Plugin'
            description = 'Comment PreProcessor for Java, Kotlin & Text Resources!'
            tags.set(['preprocess', 'java', 'kotlin', 'resources'])
        }
    }
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
    // Include functionalTest as part of the check lifecycle
    dependsOn(testing.suites.functionalTest)
}

tasks.withType(AbstractPublishToMaven).configureEach {
    dependsOn(tasks.named("check"))
}

jar {
    manifest {
        attributes 'Implementation-Version': project.version
    }
}

java {
    withSourcesJar()
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    publications {
        pluginMaven(MavenPublication) {
            configureEach {
                groupId = group
                artifactId = pluginId

                pom {
                    name.set("PreProcessor")
                    description.set("Comment PreProcessor for Java.")
                    url.set("https://github.com/ToCraft/PreProcessor")

                    licenses {
                        license {
                            name.set("CC BY-NC-SA 4.0")
                            url.set("https://raw.githubusercontent.com/ToCraft/PreProcessor/main/LICENSE.TXT")
                        }
                    }

                    scm {
                        connection.set("git:https://github.com/ToCraft/PreProcessor.git")
                        developerConnection.set("git:https://github.com/ToCraft/PreProcessor.git")
                        url.set("https://github.com/ToCraft/PreProcessor")
                    }

                    developers {
                        developer {
                            id = "tocraft"
                            name = "To_Craft"
                            email = "development@tocraft.dev"
                            organizationUrl = "https://tocraft.dev"
                        }
                    }
                }
            }
        }
    }

    repositories {
        String mavenPass = System.getenv("MAVEN_PASS")
        if (mavenPass != null) {
            maven {
                name = "ToCraftsMaven"
                url "https://maven.tocraft.dev/public"

                credentials {
                    username = "tocraft"
                    password = mavenPass
                }
            }
        }
    }
}
